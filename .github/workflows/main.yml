name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY_URL: '903389493868.dkr.ecr.us-east-1.amazonaws.com'
      AWS_REGION: 'us-east-1'

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # - name: Build Docker image
    #   run: docker build -t ${{ env.ECR_REGISTRY_URL }}/helloworld:latest .
    # #   run: docker build -t helloworld .
    # #   run: docker tag helloworld:latest 903389493868.dkr.ecr.us-east-1.amazonaws.com/helloworld:latest
    - name: Build and tag Docker image
      run: |
          docker build -t ${{ env.AWS_ECR_REGISTRY_URL }}/helloworld:${{ github.sha }} .
          docker tag ${{ env.AWS_ECR_REGISTRY_URL }}/myapp:${{ github.sha }} ${{ env.AWS_ECR_REGISTRY_URL }}/helloworld:latest
    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY_URL }}

    - name: Push Docker image to ECR
      run: docker push ${{ env.ECR_REGISTRY_URL }}/helloworld
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.AWS_ECR_REGISTRY_URL }}/helloworld:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: false
        vuln-type: 'os,library,application'
        severity: 'CRITICAL,HIGH,MEDIUM'
    # - name: Scan Docker image with Trivy
    #   run: |
    #     docker pull ${{ env.ECR_REGISTRY_URL }}/helloworld:latest
    #     docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
    #       -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
    #       -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
    #       aquasec/trivy ${{ env.ECR_REGISTRY_URL }}/helloworld:latest
    